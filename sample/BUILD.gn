##----------------------------------------------------------------------------##
## This file is distributed under the MIT License.                            ##
## See LICENSE.txt for details.                                               ##
## Copyright (C) Tran Tuan Nghia <trantuannghia95@gmail.com> 2022             ##
##----------------------------------------------------------------------------##

import("//core/reflection/reflection.gni")
import("//third_party/dxc/dxc.gni")

group("sample") {
  deps = [
    ":dx12_sample",
  ]
}

executable("net_sample") {
  sources = [
    "net.cpp",
    "reflection.hpp",
  ]

  deps = [
    "//core",
  ]

  if (is_win) {
    libs = [
      "Ws2_32.lib",
    ]
  }
}

executable("reflection_sample") {
  sources = [
    "reflection_sample.cpp",
  ]

  deps = [
    ":test_reflection",
    "//core",
  ]
}

reflection("test_reflection") {
  headers = [
    "test_reflection_class.h",
  ]
}

executable("vulkan_sample") {
  sources = [
    "cam.cpp",
    "cam.h",
    "vulkan_loader.cpp",
    "vulkan_loader.h",
    "vulkan_sample.cpp",
  ]

  configs += [
    "//third_party/vulkan:vulkan_config",
  ]

  deps = [
    "//assets",
    "//core",
    ":shadow_vs_spirv",
    ":shader_vs_spirv",
    ":shader_ps_spirv",
  ]
}
executable("dx12_sample") {
  sources = [
    "cam.cpp",
    "cam.h",
    "dx12_sample.cpp",
    "quake_console.cpp",
    "quake_console.h",
  ]

  deps = [
    ":dx12_shader",
    "//assets",
    "//core",
    "//third_party/libclang",
  ]

  libs = [
    "D3D12.lib",
    "D3DCompiler.lib",
    "DXGI.lib",
  ]
}

executable("hash_table") {
  sources = [
    "hash_table.cpp",
  ]

  deps = [
    "//core",
  ]
}

copy("dx12_shader") {
  sources = [
    "rtt.hlsl",
    "shader.hlsl",
    "shadow.hlsl",
    "ui.hlsl",
  ]

  outputs = [
    "$root_out_dir/assets/{{source_file_part}}"
  ]
}

dxc("shadow_vs") {
  params = [ "shadow.hlsl", "VSMain", "vs_6_0", "shadow_vs" ]
}

dxc("shader_vs") {
  params = [ "shader.hlsl", "VSMain", "vs_6_0", "shader_vs" ]
}

dxc("shader_ps") {
  params = [ "shader.hlsl", "PSMain", "ps_6_0", "shader_ps" ]
}
